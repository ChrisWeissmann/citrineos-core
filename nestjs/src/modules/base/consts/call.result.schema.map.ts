import {
  CancelReservationResponseSchema,
  CertificateSignedResponseSchema,
  ChangeAvailabilityResponseSchema,
  ClearCacheResponseSchema,
  ClearChargingProfileResponseSchema,
  ClearDisplayMessageResponseSchema,
  ClearVariableMonitoringResponseSchema,
  CostUpdatedResponseSchema,
  CustomerInformationResponseSchema,
  DataTransferResponseSchema,
  DeleteCertificateResponseSchema,
  GetBaseReportResponseSchema,
  GetCertificateStatusRequestSchema,
  GetChargingProfilesResponseSchema,
  GetCompositeScheduleResponseSchema,
  GetInstalledCertificateIdsResponseSchema,
  GetLocalListVersionResponseSchema,
  GetLogResponseSchema,
  GetReportResponseSchema,
  GetTransactionStatusResponseSchema,
  GetVariablesResponseSchema,
  InstallCertificateResponseSchema,
  RequestStartTransactionResponseSchema,
  RequestStopTransactionResponseSchema,
  ReserveNowResponseSchema,
  ResetResponseSchema,
  SendLocalListResponseSchema,
  SetChargingProfileResponseSchema,
  SetDisplayMessageResponseSchema,
  SetMonitoringBaseResponseSchema,
  SetMonitoringLevelResponseSchema,
  SetNetworkProfileResponseSchema,
  SetVariableMonitoringResponseSchema,
  SetVariablesResponseSchema,
  TriggerMessageResponseSchema,
  UnlockConnectorResponseSchema,
  UnpublishFirmwareResponseSchema,
  UpdateFirmwareResponseSchema
} from '../ocpp/model';
import {CallAction} from "../enums/call.action";

export const CALL_RESULT_SCHEMA_MAP: Map<CallAction, object> = new Map<CallAction, object>([
  [CallAction.CancelReservation, CancelReservationResponseSchema],
  [CallAction.CertificateSigned, CertificateSignedResponseSchema],
  [CallAction.ChangeAvailability, ChangeAvailabilityResponseSchema],
  [CallAction.ClearCache, ClearCacheResponseSchema],
  [CallAction.ClearChargingProfile, ClearChargingProfileResponseSchema],
  [CallAction.ClearDisplayMessage, ClearDisplayMessageResponseSchema],
  [CallAction.ClearVariableMonitoring, ClearVariableMonitoringResponseSchema],
  [CallAction.CustomerInformation, CustomerInformationResponseSchema],
  [CallAction.CostUpdate, CostUpdatedResponseSchema],
  [CallAction.DataTransfer, DataTransferResponseSchema],
  [CallAction.DeleteCertificate, DeleteCertificateResponseSchema],
  [CallAction.GetBaseReport, GetBaseReportResponseSchema],
  [CallAction.GetChargingProfiles, GetChargingProfilesResponseSchema],
  [CallAction.GetCompositeSchedule, GetCompositeScheduleResponseSchema],
  [CallAction.GetLocalListVersion, GetLocalListVersionResponseSchema],
  [CallAction.GetLog, GetLogResponseSchema],
  [CallAction.GetReport, GetReportResponseSchema],
  [CallAction.GetTransactionStatus, GetTransactionStatusResponseSchema],
  [CallAction.InstallCertificate, InstallCertificateResponseSchema],
  [CallAction.GetCertificateStatus, GetCertificateStatusRequestSchema],
  [CallAction.GetInstalledCertificateIds, GetInstalledCertificateIdsResponseSchema],
  [CallAction.GetVariables, GetVariablesResponseSchema],
  [CallAction.RequestStartTransaction, RequestStartTransactionResponseSchema],
  [CallAction.RequestStopTransaction, RequestStopTransactionResponseSchema],
  [CallAction.ReserveNow, ReserveNowResponseSchema],
  [CallAction.Reset, ResetResponseSchema],
  [CallAction.SendLocalList, SendLocalListResponseSchema],
  [CallAction.SetChargingProfile, SetChargingProfileResponseSchema],
  [CallAction.SetDisplayMessage, SetDisplayMessageResponseSchema],
  [CallAction.SetMonitoringBase, SetMonitoringBaseResponseSchema],
  [CallAction.SetMonitoringLevel, SetMonitoringLevelResponseSchema],
  [CallAction.SetNetworkProfile, SetNetworkProfileResponseSchema],
  [CallAction.SetVariableMonitoring, SetVariableMonitoringResponseSchema],
  [CallAction.SetVariables, SetVariablesResponseSchema],
  [CallAction.TriggerMessage, TriggerMessageResponseSchema],
  [CallAction.UnlockConnector, UnlockConnectorResponseSchema],
  [CallAction.UnpublishFirmware, UnpublishFirmwareResponseSchema],
  [CallAction.UpdateFirmware, UpdateFirmwareResponseSchema],
]);